package Automation;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;

public class AuthenticationPage {
    private  WebDriver driver;
    private  WebDriverWait wait;

    //Locators for Navigation
    private  By loginLink = By.id("login2"); 
    private  By signupLink = By.id("signin2"); 
    private  By welcomeMessage = By.id("nameofuser");
    private  By logoutLink = By.id("logout2"); 

    //Locators for Login 
    private  By loginModal = By.id("logInModal");
    private  By loginUsernameField = By.id("loginusername");
    private  By loginPasswordField = By.id("loginpassword");
    private  By loginButton = By.xpath("//*[@id=\"logInModal\"]/div/div/div[3]/button[2]");

    //Locators for Sign Up
    private  By signupModal = By.id("signInModal");
    private  By signupUsernameField = By.id("sign-username");
    private  By signupPasswordField = By.id("sign-password");
    private  By signupButton = By.xpath("//*[@id=\"signInModal\"]/div/div/div[3]/button[2]");


    public AuthenticationPage(WebDriver driver) {
        this.driver = driver;
        this.wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    }

    //Actions

    public void clickLoginLink() {
        driver.findElement(loginLink).click();
        wait.until(ExpectedConditions.visibilityOfElementLocated(loginModal));
    }

    public void clickSignupLink() {
        driver.findElement(signupLink).click();
        wait.until(ExpectedConditions.visibilityOfElementLocated(signupModal));
    }

    public void performLogin(String username, String password) {
        wait.until(ExpectedConditions.visibilityOfElementLocated(loginUsernameField));

        driver.findElement(loginUsernameField).sendKeys(username);
        driver.findElement(loginPasswordField).sendKeys(password);
        driver.findElement(loginButton).click();
    }

    public void performSignup(String username, String password) {
        wait.until(ExpectedConditions.visibilityOfElementLocated(signupUsernameField));

        driver.findElement(signupUsernameField).sendKeys(username);
        driver.findElement(signupPasswordField).sendKeys(password);
        driver.findElement(signupButton).click();
    }

    public void clickLogout() {
        driver.findElement(logoutLink).click();
        wait.until(ExpectedConditions.invisibilityOfElementLocated(welcomeMessage));
    }

    public String getWelcomeMessage() {
        wait.until(ExpectedConditions.visibilityOfElementLocated(welcomeMessage));
        return driver.findElement(welcomeMessage).getText();
    }
    
    public String handleAlertAndGetText() {
        wait.until(ExpectedConditions.alertIsPresent());
        String alertText = driver.switchTo().alert().getText();
        driver.switchTo().alert().accept();
        return alertText;
    }
    public boolean isUserLoggedIn() {
        try {
             // Try to locate and display the welcome message within the wait time
             return driver.findElement(welcomeMessage).isDisplayed();
        } catch (org.openqa.selenium.NoSuchElementException e) {
            return false;
        }
    }
    public boolean isLogoutLinkVisible() {
        try {
            // Check for visibility of the logout link
            return driver.findElement(logoutLink).isDisplayed();
        } catch (org.openqa.selenium.NoSuchElementException e) {
            return false;
        }
    }

    
    }

